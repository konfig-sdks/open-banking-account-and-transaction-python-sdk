# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.description1 import Description1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_active_or_historic_currency_and_amount6 import OBActiveOrHistoricCurrencyAndAmount6
from open_banking_account_and_transaction_python_sdk.pydantic.ob_credit_debit_code0 import OBCreditDebitCode0

class OBStatement2BasicStatementFeeItem(BaseModel):
    amount: OBActiveOrHistoricCurrencyAndAmount6 = Field(alias='Amount')

    credit_debit_indicator: OBCreditDebitCode0 = Field(alias='CreditDebitIndicator')

    # Fee type, in a coded form.
    type: str = Field(alias='Type')

    description: typing.Optional[Description1] = Field(None, alias='Description')

    # How frequently the fee is applied to the Account.
    frequency: typing.Optional[str] = Field(None, alias='Frequency')

    # Rate charged for Statement Fee (where it is charged in terms of a rate rather than an amount)
    rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='Rate')

    # Description that may be available for the statement fee rate type.
    rate_type: typing.Optional[str] = Field(None, alias='RateType')
    class Config:
        arbitrary_types_allowed = True

# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.ob_amount11 import OBAmount11
from open_banking_account_and_transaction_python_sdk.pydantic.ob_amount12 import OBAmount12
from open_banking_account_and_transaction_python_sdk.pydantic.ob_fee_frequency1_code0 import OBFeeFrequency1Code0
from open_banking_account_and_transaction_python_sdk.pydantic.ob_fee_frequency1_code1 import OBFeeFrequency1Code1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_interest_rate_type1_code0 import OBInterestRateType1Code0
from open_banking_account_and_transaction_python_sdk.pydantic.ob_other_code_type11 import OBOtherCodeType11
from open_banking_account_and_transaction_python_sdk.pydantic.ob_other_code_type12 import OBOtherCodeType12
from open_banking_account_and_transaction_python_sdk.pydantic.ob_other_code_type13 import OBOtherCodeType13
from open_banking_account_and_transaction_python_sdk.pydantic.ob_other_code_type14 import OBOtherCodeType14
from open_banking_account_and_transaction_python_sdk.pydantic.ob_overdraft_fee_type1_code import OBOverdraftFeeType1Code
from open_banking_account_and_transaction_python_sdk.pydantic.ob_rate10 import OBRate10
from open_banking_account_and_transaction_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_overdraft_overdraft_tier_band_set_item_overdraft_fees_charges_item_overdraft_fee_charge_detail_item_notes import OBReadProduct2DataProductItemOtherProductTypeOverdraftOverdraftTierBandSetItemOverdraftFeesChargesItemOverdraftFeeChargeDetailItemNotes
from open_banking_account_and_transaction_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type_overdraft_overdraft_tier_band_set_item_overdraft_fees_charges_item_overdraft_fee_charge_detail_item_overdraft_fee_charge_cap import OBReadProduct2DataProductItemOtherProductTypeOverdraftOverdraftTierBandSetItemOverdraftFeesChargesItemOverdraftFeeChargeDetailItemOverdraftFeeChargeCap

class OBReadProduct2DataProductItemOtherProductTypeOverdraftOverdraftTierBandSetItemOverdraftFeesChargesItemOverdraftFeeChargeDetailItem(BaseModel):
    application_frequency: OBFeeFrequency1Code0 = Field(alias='ApplicationFrequency')

    fee_type: OBOverdraftFeeType1Code = Field(alias='FeeType')

    calculation_frequency: typing.Optional[OBFeeFrequency1Code1] = Field(None, alias='CalculationFrequency')

    fee_amount: typing.Optional[OBAmount12] = Field(None, alias='FeeAmount')

    fee_rate: typing.Optional[OBRate10] = Field(None, alias='FeeRate')

    fee_rate_type: typing.Optional[OBInterestRateType1Code0] = Field(None, alias='FeeRateType')

    incremental_borrowing_amount: typing.Optional[OBAmount11] = Field(None, alias='IncrementalBorrowingAmount')

    # Indicates whether fee and charges are negotiable
    negotiable_indicator: typing.Optional[bool] = Field(None, alias='NegotiableIndicator')

    notes: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeOverdraftOverdraftTierBandSetItemOverdraftFeesChargesItemOverdraftFeeChargeDetailItemNotes] = Field(None, alias='Notes')

    other_application_frequency: typing.Optional[OBOtherCodeType11] = Field(None, alias='OtherApplicationFrequency')

    other_calculation_frequency: typing.Optional[OBOtherCodeType12] = Field(None, alias='OtherCalculationFrequency')

    other_fee_rate_type: typing.Optional[OBOtherCodeType14] = Field(None, alias='OtherFeeRateType')

    other_fee_type: typing.Optional[OBOtherCodeType13] = Field(None, alias='OtherFeeType')

    # Indicates if the fee/charge is already covered by an 'Overdraft Control' fee or not.
    overdraft_control_indicator: typing.Optional[bool] = Field(None, alias='OverdraftControlIndicator')

    overdraft_fee_charge_cap: typing.Optional[OBReadProduct2DataProductItemOtherProductTypeOverdraftOverdraftTierBandSetItemOverdraftFeesChargesItemOverdraftFeeChargeDetailItemOverdraftFeeChargeCap] = Field(None, alias='OverdraftFeeChargeCap')
    class Config:
        arbitrary_types_allowed = True

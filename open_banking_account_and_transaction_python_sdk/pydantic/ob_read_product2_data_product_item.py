# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.account_id import AccountId
from open_banking_account_and_transaction_python_sdk.pydantic.ob_read_product2_data_product_item_other_product_type import OBReadProduct2DataProductItemOtherProductType
from open_banking_account_and_transaction_python_sdk.pydantic.obbca_data1 import OBBCAData1
from open_banking_account_and_transaction_python_sdk.pydantic.obpca_data1 import OBPCAData1

class OBReadProduct2DataProductItem(BaseModel):
    account_id: AccountId = Field(alias='AccountId')

    # Product type : Personal Current Account, Business Current Account
    product_type: Literal["BusinessCurrentAccount", "CommercialCreditCard", "Other", "PersonalCurrentAccount", "SMELoan"] = Field(alias='ProductType')

    b_c_a: typing.Optional[OBBCAData1] = Field(None, alias='BCA')

    # Unique and unambiguous identification of a  Product Marketing State.
    marketing_state_id: typing.Optional[str] = Field(None, alias='MarketingStateId')

    other_product_type: typing.Optional[OBReadProduct2DataProductItemOtherProductType] = Field(None, alias='OtherProductType')

    p_c_a: typing.Optional[OBPCAData1] = Field(None, alias='PCA')

    # The unique ID that has been internally assigned by the financial institution to each of the current account banking products they market to their retail and/or small to medium enterprise (SME) customers.
    product_id: typing.Optional[str] = Field(None, alias='ProductId')

    # The name of the Product used for marketing purposes from a customer perspective. I.e. what the customer would recognise.
    product_name: typing.Optional[str] = Field(None, alias='ProductName')

    # Any secondary Identification which  supports Product Identifier to uniquely identify the current account banking products.
    secondary_product_id: typing.Optional[str] = Field(None, alias='SecondaryProductId')
    class Config:
        arbitrary_types_allowed = True

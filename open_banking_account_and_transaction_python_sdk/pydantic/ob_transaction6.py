# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.account_id import AccountId
from open_banking_account_and_transaction_python_sdk.pydantic.address_line import AddressLine
from open_banking_account_and_transaction_python_sdk.pydantic.ob_active_or_historic_currency_and_amount10 import OBActiveOrHistoricCurrencyAndAmount10
from open_banking_account_and_transaction_python_sdk.pydantic.ob_active_or_historic_currency_and_amount9 import OBActiveOrHistoricCurrencyAndAmount9
from open_banking_account_and_transaction_python_sdk.pydantic.ob_bank_transaction_code_structure1 import OBBankTransactionCodeStructure1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_branch_and_financial_institution_identification61 import OBBranchAndFinancialInstitutionIdentification61
from open_banking_account_and_transaction_python_sdk.pydantic.ob_branch_and_financial_institution_identification62 import OBBranchAndFinancialInstitutionIdentification62
from open_banking_account_and_transaction_python_sdk.pydantic.ob_cash_account60 import OBCashAccount60
from open_banking_account_and_transaction_python_sdk.pydantic.ob_cash_account61 import OBCashAccount61
from open_banking_account_and_transaction_python_sdk.pydantic.ob_credit_debit_code1 import OBCreditDebitCode1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_currency_exchange5 import OBCurrencyExchange5
from open_banking_account_and_transaction_python_sdk.pydantic.ob_entry_status1_code import OBEntryStatus1Code
from open_banking_account_and_transaction_python_sdk.pydantic.ob_merchant_details1 import OBMerchantDetails1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_supplementary_data1 import OBSupplementaryData1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_transaction_card_instrument1 import OBTransactionCardInstrument1
from open_banking_account_and_transaction_python_sdk.pydantic.ob_transaction_cash_balance import OBTransactionCashBalance
from open_banking_account_and_transaction_python_sdk.pydantic.ob_transaction_mutability1_code import OBTransactionMutability1Code
from open_banking_account_and_transaction_python_sdk.pydantic.proprietary_bank_transaction_code_structure1 import ProprietaryBankTransactionCodeStructure1
from open_banking_account_and_transaction_python_sdk.pydantic.statement_reference import StatementReference
from open_banking_account_and_transaction_python_sdk.pydantic.transaction_id import TransactionId
from open_banking_account_and_transaction_python_sdk.pydantic.transaction_information import TransactionInformation
from open_banking_account_and_transaction_python_sdk.pydantic.transaction_reference import TransactionReference

class OBTransaction6(BaseModel):
    account_id: AccountId = Field(alias='AccountId')

    amount: OBActiveOrHistoricCurrencyAndAmount9 = Field(alias='Amount')

    # Date and time when a transaction entry is posted to an account on the account servicer's books. Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
    booking_date_time: datetime = Field(alias='BookingDateTime')

    credit_debit_indicator: OBCreditDebitCode1 = Field(alias='CreditDebitIndicator')

    status: OBEntryStatus1Code = Field(alias='Status')

    address_line: typing.Optional[AddressLine] = Field(None, alias='AddressLine')

    balance: typing.Optional[OBTransactionCashBalance] = Field(None, alias='Balance')

    bank_transaction_code: typing.Optional[OBBankTransactionCodeStructure1] = Field(None, alias='BankTransactionCode')

    card_instrument: typing.Optional[OBTransactionCardInstrument1] = Field(None, alias='CardInstrument')

    charge_amount: typing.Optional[OBActiveOrHistoricCurrencyAndAmount10] = Field(None, alias='ChargeAmount')

    creditor_account: typing.Optional[OBCashAccount60] = Field(None, alias='CreditorAccount')

    creditor_agent: typing.Optional[OBBranchAndFinancialInstitutionIdentification61] = Field(None, alias='CreditorAgent')

    currency_exchange: typing.Optional[OBCurrencyExchange5] = Field(None, alias='CurrencyExchange')

    debtor_account: typing.Optional[OBCashAccount61] = Field(None, alias='DebtorAccount')

    debtor_agent: typing.Optional[OBBranchAndFinancialInstitutionIdentification62] = Field(None, alias='DebtorAgent')

    merchant_details: typing.Optional[OBMerchantDetails1] = Field(None, alias='MerchantDetails')

    proprietary_bank_transaction_code: typing.Optional[ProprietaryBankTransactionCodeStructure1] = Field(None, alias='ProprietaryBankTransactionCode')

    statement_reference: typing.Optional[typing.List[StatementReference]] = Field(None, alias='StatementReference')

    supplementary_data: typing.Optional[OBSupplementaryData1] = Field(None, alias='SupplementaryData')

    transaction_id: typing.Optional[TransactionId] = Field(None, alias='TransactionId')

    transaction_information: typing.Optional[TransactionInformation] = Field(None, alias='TransactionInformation')

    transaction_mutability: typing.Optional[OBTransactionMutability1Code] = Field(None, alias='TransactionMutability')

    transaction_reference: typing.Optional[TransactionReference] = Field(None, alias='TransactionReference')

    # Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry. Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date. For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used. In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00
    value_date_time: typing.Optional[datetime] = Field(None, alias='ValueDateTime')
    class Config:
        arbitrary_types_allowed = True

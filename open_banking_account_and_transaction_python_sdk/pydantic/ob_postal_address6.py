# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.building_number import BuildingNumber
from open_banking_account_and_transaction_python_sdk.pydantic.ob_address_type_code import OBAddressTypeCode
from open_banking_account_and_transaction_python_sdk.pydantic.ob_postal_address6_address_line import OBPostalAddress6AddressLine
from open_banking_account_and_transaction_python_sdk.pydantic.post_code import PostCode
from open_banking_account_and_transaction_python_sdk.pydantic.street_name import StreetName
from open_banking_account_and_transaction_python_sdk.pydantic.town_name import TownName

class OBPostalAddress6(BaseModel):
    address_line: typing.Optional[OBPostalAddress6AddressLine] = Field(None, alias='AddressLine')

    address_type: typing.Optional[OBAddressTypeCode] = Field(None, alias='AddressType')

    building_number: typing.Optional[BuildingNumber] = Field(None, alias='BuildingNumber')

    # Nation with its own government.
    country: typing.Optional[str] = Field(None, alias='Country')

    # Identifies a subdivision of a country such as state, region, county.
    country_sub_division: typing.Optional[str] = Field(None, alias='CountrySubDivision')

    # Identification of a division of a large organisation or building.
    department: typing.Optional[str] = Field(None, alias='Department')

    post_code: typing.Optional[PostCode] = Field(None, alias='PostCode')

    street_name: typing.Optional[StreetName] = Field(None, alias='StreetName')

    # Identification of a sub-division of a large organisation or building.
    sub_department: typing.Optional[str] = Field(None, alias='SubDepartment')

    town_name: typing.Optional[TownName] = Field(None, alias='TownName')
    class Config:
        arbitrary_types_allowed = True

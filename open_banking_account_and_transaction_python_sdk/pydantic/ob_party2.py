# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.email_address import EmailAddress
from open_banking_account_and_transaction_python_sdk.pydantic.full_legal_name import FullLegalName
from open_banking_account_and_transaction_python_sdk.pydantic.name3 import Name3
from open_banking_account_and_transaction_python_sdk.pydantic.ob_external_party_type1_code import OBExternalPartyType1Code
from open_banking_account_and_transaction_python_sdk.pydantic.ob_party2_address import OBParty2Address
from open_banking_account_and_transaction_python_sdk.pydantic.ob_party_relationships1 import OBPartyRelationships1
from open_banking_account_and_transaction_python_sdk.pydantic.party_id import PartyId
from open_banking_account_and_transaction_python_sdk.pydantic.party_number import PartyNumber
from open_banking_account_and_transaction_python_sdk.pydantic.phone_number0 import PhoneNumber0
from open_banking_account_and_transaction_python_sdk.pydantic.phone_number1 import PhoneNumber1

class OBParty2(BaseModel):
    party_id: PartyId = Field(alias='PartyId')

    # A partyâ€™s role with respect to the related account.
    account_role: typing.Optional[str] = Field(None, alias='AccountRole')

    address: typing.Optional[OBParty2Address] = Field(None, alias='Address')

    beneficial_ownership: typing.Optional[bool] = Field(None, alias='BeneficialOwnership')

    email_address: typing.Optional[EmailAddress] = Field(None, alias='EmailAddress')

    full_legal_name: typing.Optional[FullLegalName] = Field(None, alias='FullLegalName')

    # Legal standing of the party.
    legal_structure: typing.Optional[str] = Field(None, alias='LegalStructure')

    mobile: typing.Optional[PhoneNumber1] = Field(None, alias='Mobile')

    name: typing.Optional[Name3] = Field(None, alias='Name')

    party_number: typing.Optional[PartyNumber] = Field(None, alias='PartyNumber')

    party_type: typing.Optional[OBExternalPartyType1Code] = Field(None, alias='PartyType')

    phone: typing.Optional[PhoneNumber0] = Field(None, alias='Phone')

    relationships: typing.Optional[OBPartyRelationships1] = Field(None, alias='Relationships')
    class Config:
        arbitrary_types_allowed = True

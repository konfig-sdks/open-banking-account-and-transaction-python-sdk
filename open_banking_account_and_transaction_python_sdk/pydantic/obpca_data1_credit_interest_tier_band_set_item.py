# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.obpca_data1_credit_interest_tier_band_set_item_notes import OBPCAData1CreditInterestTierBandSetItemNotes
from open_banking_account_and_transaction_python_sdk.pydantic.obpca_data1_credit_interest_tier_band_set_item_tier_band import OBPCAData1CreditInterestTierBandSetItemTierBand

class OBPCAData1CreditInterestTierBandSetItem(BaseModel):
    tier_band: OBPCAData1CreditInterestTierBandSetItemTierBand = Field(alias='TierBand')

    # The methodology of how credit interest is charged. It can be:-  1. Banded Interest rates are banded. i.e. Increasing rate on whole balance as balance increases.  2. Tiered Interest rates are tiered. i.e. increasing rate for each tier as balance increases, but interest paid on tier fixed for that tier and not on whole balance.  3. Whole The same interest rate is applied irrespective of the PCA balance
    tier_band_method: Literal["Tiered", "Whole"] = Field(alias='TierBandMethod')

    # Methods of calculating interest
    calculation_method: typing.Optional[Literal["Compound", "SimpleInterest"]] = Field(None, alias='CalculationMethod')

    # Describes whether accrued interest is payable only to the PCA or to another bank account
    destination: typing.Optional[Literal["PayAway", "SelfCredit"]] = Field(None, alias='Destination')

    notes: typing.Optional[OBPCAData1CreditInterestTierBandSetItemNotes] = Field(None, alias='Notes')
    class Config:
        arbitrary_types_allowed = True

# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from open_banking_account_and_transaction_python_sdk.pydantic.description2 import Description2
from open_banking_account_and_transaction_python_sdk.pydantic.ob_active_or_historic_currency_and_amount7 import OBActiveOrHistoricCurrencyAndAmount7
from open_banking_account_and_transaction_python_sdk.pydantic.ob_credit_debit_code0 import OBCreditDebitCode0

class OBStatement2DetailStatementInterestItem(BaseModel):
    amount: OBActiveOrHistoricCurrencyAndAmount7 = Field(alias='Amount')

    credit_debit_indicator: OBCreditDebitCode0 = Field(alias='CreditDebitIndicator')

    # Interest amount type, in a coded form.
    type: str = Field(alias='Type')

    description: typing.Optional[Description2] = Field(None, alias='Description')

    # Specifies the statement fee type requested
    frequency: typing.Optional[str] = Field(None, alias='Frequency')

    # field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.
    rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='Rate')

    # Description that may be available for the statement Interest rate type.
    rate_type: typing.Optional[str] = Field(None, alias='RateType')
    class Config:
        arbitrary_types_allowed = True

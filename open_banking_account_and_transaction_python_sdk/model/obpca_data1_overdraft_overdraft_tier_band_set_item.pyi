# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from open_banking_account_and_transaction_python_sdk import schemas  # noqa: F401


class OBPCAData1OverdraftOverdraftTierBandSetItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Tier band set details
    """


    class MetaOapg:
        required = {
            "OverdraftTierBand",
            "TierBandMethod",
        }
        
        class properties:
        
            @staticmethod
            def OverdraftTierBand() -> typing.Type['OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand']:
                return OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand
            
            
            class TierBandMethod(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def TIERED(cls):
                    return cls("Tiered")
                
                @schemas.classproperty
                def WHOLE(cls):
                    return cls("Whole")
                
                @schemas.classproperty
                def BANDED(cls):
                    return cls("Banded")
            AuthorisedIndicator = schemas.BoolSchema
            
            
            class BufferAmount(
                schemas.StrSchema
            ):
                pass
            
            
            class Identification(
                schemas.StrSchema
            ):
                pass
        
            @staticmethod
            def Notes() -> typing.Type['OBPCAData1OverdraftOverdraftTierBandSetItemNotes']:
                return OBPCAData1OverdraftOverdraftTierBandSetItemNotes
        
            @staticmethod
            def OverdraftFeesCharges() -> typing.Type['OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges']:
                return OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges
            
            
            class OverdraftType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def COMMITTED(cls):
                    return cls("Committed")
                
                @schemas.classproperty
                def ON_DEMAND(cls):
                    return cls("OnDemand")
                
                @schemas.classproperty
                def OTHER(cls):
                    return cls("Other")
            __annotations__ = {
                "OverdraftTierBand": OverdraftTierBand,
                "TierBandMethod": TierBandMethod,
                "AuthorisedIndicator": AuthorisedIndicator,
                "BufferAmount": BufferAmount,
                "Identification": Identification,
                "Notes": Notes,
                "OverdraftFeesCharges": OverdraftFeesCharges,
                "OverdraftType": OverdraftType,
            }
    
    OverdraftTierBand: 'OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand'
    TierBandMethod: MetaOapg.properties.TierBandMethod
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OverdraftTierBand"]) -> 'OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TierBandMethod"]) -> MetaOapg.properties.TierBandMethod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["AuthorisedIndicator"]) -> MetaOapg.properties.AuthorisedIndicator: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BufferAmount"]) -> MetaOapg.properties.BufferAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Identification"]) -> MetaOapg.properties.Identification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Notes"]) -> 'OBPCAData1OverdraftOverdraftTierBandSetItemNotes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OverdraftFeesCharges"]) -> 'OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OverdraftType"]) -> MetaOapg.properties.OverdraftType: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["OverdraftTierBand", "TierBandMethod", "AuthorisedIndicator", "BufferAmount", "Identification", "Notes", "OverdraftFeesCharges", "OverdraftType", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OverdraftTierBand"]) -> 'OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TierBandMethod"]) -> MetaOapg.properties.TierBandMethod: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["AuthorisedIndicator"]) -> typing.Union[MetaOapg.properties.AuthorisedIndicator, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BufferAmount"]) -> typing.Union[MetaOapg.properties.BufferAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Identification"]) -> typing.Union[MetaOapg.properties.Identification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Notes"]) -> typing.Union['OBPCAData1OverdraftOverdraftTierBandSetItemNotes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OverdraftFeesCharges"]) -> typing.Union['OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OverdraftType"]) -> typing.Union[MetaOapg.properties.OverdraftType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["OverdraftTierBand", "TierBandMethod", "AuthorisedIndicator", "BufferAmount", "Identification", "Notes", "OverdraftFeesCharges", "OverdraftType", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        OverdraftTierBand: 'OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand',
        TierBandMethod: typing.Union[MetaOapg.properties.TierBandMethod, str, ],
        AuthorisedIndicator: typing.Union[MetaOapg.properties.AuthorisedIndicator, bool, schemas.Unset] = schemas.unset,
        BufferAmount: typing.Union[MetaOapg.properties.BufferAmount, str, schemas.Unset] = schemas.unset,
        Identification: typing.Union[MetaOapg.properties.Identification, str, schemas.Unset] = schemas.unset,
        Notes: typing.Union['OBPCAData1OverdraftOverdraftTierBandSetItemNotes', schemas.Unset] = schemas.unset,
        OverdraftFeesCharges: typing.Union['OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges', schemas.Unset] = schemas.unset,
        OverdraftType: typing.Union[MetaOapg.properties.OverdraftType, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OBPCAData1OverdraftOverdraftTierBandSetItem':
        return super().__new__(
            cls,
            *args,
            OverdraftTierBand=OverdraftTierBand,
            TierBandMethod=TierBandMethod,
            AuthorisedIndicator=AuthorisedIndicator,
            BufferAmount=BufferAmount,
            Identification=Identification,
            Notes=Notes,
            OverdraftFeesCharges=OverdraftFeesCharges,
            OverdraftType=OverdraftType,
            _configuration=_configuration,
            **kwargs,
        )

from open_banking_account_and_transaction_python_sdk.model.obpca_data1_overdraft_overdraft_tier_band_set_item_notes import OBPCAData1OverdraftOverdraftTierBandSetItemNotes
from open_banking_account_and_transaction_python_sdk.model.obpca_data1_overdraft_overdraft_tier_band_set_item_overdraft_fees_charges import OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftFeesCharges
from open_banking_account_and_transaction_python_sdk.model.obpca_data1_overdraft_overdraft_tier_band_set_item_overdraft_tier_band import OBPCAData1OverdraftOverdraftTierBandSetItemOverdraftTierBand

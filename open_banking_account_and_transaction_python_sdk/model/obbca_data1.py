# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from open_banking_account_and_transaction_python_sdk import schemas  # noqa: F401


class OBBCAData1(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def CreditInterest() -> typing.Type['OBBCAData1CreditInterest']:
                return OBBCAData1CreditInterest
        
            @staticmethod
            def OtherFeesCharges() -> typing.Type['OBBCAData1OtherFeesCharges']:
                return OBBCAData1OtherFeesCharges
        
            @staticmethod
            def Overdraft() -> typing.Type['OBBCAData1Overdraft']:
                return OBBCAData1Overdraft
        
            @staticmethod
            def ProductDetails() -> typing.Type['OBBCAData1ProductDetails']:
                return OBBCAData1ProductDetails
            __annotations__ = {
                "CreditInterest": CreditInterest,
                "OtherFeesCharges": OtherFeesCharges,
                "Overdraft": Overdraft,
                "ProductDetails": ProductDetails,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CreditInterest"]) -> 'OBBCAData1CreditInterest': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OtherFeesCharges"]) -> 'OBBCAData1OtherFeesCharges': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Overdraft"]) -> 'OBBCAData1Overdraft': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProductDetails"]) -> 'OBBCAData1ProductDetails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["CreditInterest", "OtherFeesCharges", "Overdraft", "ProductDetails", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CreditInterest"]) -> typing.Union['OBBCAData1CreditInterest', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OtherFeesCharges"]) -> typing.Union['OBBCAData1OtherFeesCharges', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Overdraft"]) -> typing.Union['OBBCAData1Overdraft', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProductDetails"]) -> typing.Union['OBBCAData1ProductDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["CreditInterest", "OtherFeesCharges", "Overdraft", "ProductDetails", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        CreditInterest: typing.Union['OBBCAData1CreditInterest', schemas.Unset] = schemas.unset,
        OtherFeesCharges: typing.Union['OBBCAData1OtherFeesCharges', schemas.Unset] = schemas.unset,
        Overdraft: typing.Union['OBBCAData1Overdraft', schemas.Unset] = schemas.unset,
        ProductDetails: typing.Union['OBBCAData1ProductDetails', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OBBCAData1':
        return super().__new__(
            cls,
            *args,
            CreditInterest=CreditInterest,
            OtherFeesCharges=OtherFeesCharges,
            Overdraft=Overdraft,
            ProductDetails=ProductDetails,
            _configuration=_configuration,
            **kwargs,
        )

from open_banking_account_and_transaction_python_sdk.model.obbca_data1_credit_interest import OBBCAData1CreditInterest
from open_banking_account_and_transaction_python_sdk.model.obbca_data1_other_fees_charges import OBBCAData1OtherFeesCharges
from open_banking_account_and_transaction_python_sdk.model.obbca_data1_overdraft import OBBCAData1Overdraft
from open_banking_account_and_transaction_python_sdk.model.obbca_data1_product_details import OBBCAData1ProductDetails

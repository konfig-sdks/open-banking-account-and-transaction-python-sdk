# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from open_banking_account_and_transaction_python_sdk import schemas  # noqa: F401


class Links(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Links relevant to the payload
    """


    class MetaOapg:
        required = {
            "Self",
        }
        
        class properties:
            _self = schemas.StrSchema
            First = schemas.StrSchema
            Last = schemas.StrSchema
            Next = schemas.StrSchema
            Prev = schemas.StrSchema
            __annotations__ = {
                "Self": _self,
                "First": First,
                "Last": Last,
                "Next": Next,
                "Prev": Prev,
            }
    
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Self"]) -> MetaOapg.properties._self: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["First"]) -> MetaOapg.properties.First: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Last"]) -> MetaOapg.properties.Last: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Next"]) -> MetaOapg.properties.Next: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Prev"]) -> MetaOapg.properties.Prev: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Self", "First", "Last", "Next", "Prev", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Self"]) -> MetaOapg.properties._self: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["First"]) -> typing.Union[MetaOapg.properties.First, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Last"]) -> typing.Union[MetaOapg.properties.Last, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Next"]) -> typing.Union[MetaOapg.properties.Next, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Prev"]) -> typing.Union[MetaOapg.properties.Prev, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Self", "First", "Last", "Next", "Prev", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        First: typing.Union[MetaOapg.properties.First, str, schemas.Unset] = schemas.unset,
        Last: typing.Union[MetaOapg.properties.Last, str, schemas.Unset] = schemas.unset,
        Next: typing.Union[MetaOapg.properties.Next, str, schemas.Unset] = schemas.unset,
        Prev: typing.Union[MetaOapg.properties.Prev, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Links':
        return super().__new__(
            cls,
            *args,
            First=First,
            Last=Last,
            Next=Next,
            Prev=Prev,
            _configuration=_configuration,
            **kwargs,
        )

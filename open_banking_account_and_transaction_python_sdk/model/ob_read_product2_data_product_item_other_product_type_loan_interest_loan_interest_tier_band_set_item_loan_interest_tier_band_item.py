# coding: utf-8

"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from open_banking_account_and_transaction_python_sdk import schemas  # noqa: F401


class OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Tier Band Details
    """


    class MetaOapg:
        required = {
            "FixedVariableInterestRateType",
            "TierValueMinimum",
            "MinTermPeriod",
            "RepAPR",
            "TierValueMinTerm",
        }
        
        class properties:
        
            @staticmethod
            def FixedVariableInterestRateType() -> typing.Type['OBInterestFixedVariableType1Code']:
                return OBInterestFixedVariableType1Code
            
            
            class MinTermPeriod(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "PACT": "PACT",
                        "PDAY": "PDAY",
                        "PHYR": "PHYR",
                        "PMTH": "PMTH",
                        "PQTR": "PQTR",
                        "PWEK": "PWEK",
                        "PYER": "PYER",
                    }
                
                @schemas.classproperty
                def PACT(cls):
                    return cls("PACT")
                
                @schemas.classproperty
                def PDAY(cls):
                    return cls("PDAY")
                
                @schemas.classproperty
                def PHYR(cls):
                    return cls("PHYR")
                
                @schemas.classproperty
                def PMTH(cls):
                    return cls("PMTH")
                
                @schemas.classproperty
                def PQTR(cls):
                    return cls("PQTR")
                
                @schemas.classproperty
                def PWEK(cls):
                    return cls("PWEK")
                
                @schemas.classproperty
                def PYER(cls):
                    return cls("PYER")
            
            
            class RepAPR(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$',
                    }]
            TierValueMinTerm = schemas.IntSchema
            
            
            class TierValueMinimum(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$',
                    }]
            
            
            class Identification(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 35
                    min_length = 1
        
            @staticmethod
            def LoanInterestFeesCharges() -> typing.Type['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges']:
                return OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges
            
            
            class LoanProviderInterestRate(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$',
                    }]
            
            
            class LoanProviderInterestRateType(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "INBB": "INBB",
                        "INFR": "INFR",
                        "INGR": "INGR",
                        "INLR": "INLR",
                        "INNE": "INNE",
                        "INOT": "INOT",
                    }
                
                @schemas.classproperty
                def INBB(cls):
                    return cls("INBB")
                
                @schemas.classproperty
                def INFR(cls):
                    return cls("INFR")
                
                @schemas.classproperty
                def INGR(cls):
                    return cls("INGR")
                
                @schemas.classproperty
                def INLR(cls):
                    return cls("INLR")
                
                @schemas.classproperty
                def INNE(cls):
                    return cls("INNE")
                
                @schemas.classproperty
                def INOT(cls):
                    return cls("INOT")
            
            
            class MaxTermPeriod(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "PACT": "PACT",
                        "PDAY": "PDAY",
                        "PHYR": "PHYR",
                        "PMTH": "PMTH",
                        "PQTR": "PQTR",
                        "PWEK": "PWEK",
                        "PYER": "PYER",
                    }
                
                @schemas.classproperty
                def PACT(cls):
                    return cls("PACT")
                
                @schemas.classproperty
                def PDAY(cls):
                    return cls("PDAY")
                
                @schemas.classproperty
                def PHYR(cls):
                    return cls("PHYR")
                
                @schemas.classproperty
                def PMTH(cls):
                    return cls("PMTH")
                
                @schemas.classproperty
                def PQTR(cls):
                    return cls("PQTR")
                
                @schemas.classproperty
                def PWEK(cls):
                    return cls("PWEK")
                
                @schemas.classproperty
                def PYER(cls):
                    return cls("PYER")
        
            @staticmethod
            def Notes() -> typing.Type['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes']:
                return OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes
        
            @staticmethod
            def OtherLoanProviderInterestRateType() -> typing.Type['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType']:
                return OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType
            TierValueMaxTerm = schemas.IntSchema
            
            
            class TierValueMaximum(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    regex=[{
                        'pattern': r'^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$',
                    }]
            __annotations__ = {
                "FixedVariableInterestRateType": FixedVariableInterestRateType,
                "MinTermPeriod": MinTermPeriod,
                "RepAPR": RepAPR,
                "TierValueMinTerm": TierValueMinTerm,
                "TierValueMinimum": TierValueMinimum,
                "Identification": Identification,
                "LoanInterestFeesCharges": LoanInterestFeesCharges,
                "LoanProviderInterestRate": LoanProviderInterestRate,
                "LoanProviderInterestRateType": LoanProviderInterestRateType,
                "MaxTermPeriod": MaxTermPeriod,
                "Notes": Notes,
                "OtherLoanProviderInterestRateType": OtherLoanProviderInterestRateType,
                "TierValueMaxTerm": TierValueMaxTerm,
                "TierValueMaximum": TierValueMaximum,
            }
    
    FixedVariableInterestRateType: 'OBInterestFixedVariableType1Code'
    TierValueMinimum: MetaOapg.properties.TierValueMinimum
    MinTermPeriod: MetaOapg.properties.MinTermPeriod
    RepAPR: MetaOapg.properties.RepAPR
    TierValueMinTerm: MetaOapg.properties.TierValueMinTerm
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FixedVariableInterestRateType"]) -> 'OBInterestFixedVariableType1Code': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MinTermPeriod"]) -> MetaOapg.properties.MinTermPeriod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RepAPR"]) -> MetaOapg.properties.RepAPR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TierValueMinTerm"]) -> MetaOapg.properties.TierValueMinTerm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TierValueMinimum"]) -> MetaOapg.properties.TierValueMinimum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Identification"]) -> MetaOapg.properties.Identification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LoanInterestFeesCharges"]) -> 'OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LoanProviderInterestRate"]) -> MetaOapg.properties.LoanProviderInterestRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LoanProviderInterestRateType"]) -> MetaOapg.properties.LoanProviderInterestRateType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MaxTermPeriod"]) -> MetaOapg.properties.MaxTermPeriod: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Notes"]) -> 'OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OtherLoanProviderInterestRateType"]) -> 'OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TierValueMaxTerm"]) -> MetaOapg.properties.TierValueMaxTerm: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TierValueMaximum"]) -> MetaOapg.properties.TierValueMaximum: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["FixedVariableInterestRateType", "MinTermPeriod", "RepAPR", "TierValueMinTerm", "TierValueMinimum", "Identification", "LoanInterestFeesCharges", "LoanProviderInterestRate", "LoanProviderInterestRateType", "MaxTermPeriod", "Notes", "OtherLoanProviderInterestRateType", "TierValueMaxTerm", "TierValueMaximum", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FixedVariableInterestRateType"]) -> 'OBInterestFixedVariableType1Code': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MinTermPeriod"]) -> MetaOapg.properties.MinTermPeriod: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RepAPR"]) -> MetaOapg.properties.RepAPR: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TierValueMinTerm"]) -> MetaOapg.properties.TierValueMinTerm: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TierValueMinimum"]) -> MetaOapg.properties.TierValueMinimum: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Identification"]) -> typing.Union[MetaOapg.properties.Identification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LoanInterestFeesCharges"]) -> typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LoanProviderInterestRate"]) -> typing.Union[MetaOapg.properties.LoanProviderInterestRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LoanProviderInterestRateType"]) -> typing.Union[MetaOapg.properties.LoanProviderInterestRateType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MaxTermPeriod"]) -> typing.Union[MetaOapg.properties.MaxTermPeriod, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Notes"]) -> typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OtherLoanProviderInterestRateType"]) -> typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TierValueMaxTerm"]) -> typing.Union[MetaOapg.properties.TierValueMaxTerm, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TierValueMaximum"]) -> typing.Union[MetaOapg.properties.TierValueMaximum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["FixedVariableInterestRateType", "MinTermPeriod", "RepAPR", "TierValueMinTerm", "TierValueMinimum", "Identification", "LoanInterestFeesCharges", "LoanProviderInterestRate", "LoanProviderInterestRateType", "MaxTermPeriod", "Notes", "OtherLoanProviderInterestRateType", "TierValueMaxTerm", "TierValueMaximum", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        FixedVariableInterestRateType: 'OBInterestFixedVariableType1Code',
        TierValueMinimum: typing.Union[MetaOapg.properties.TierValueMinimum, str, ],
        MinTermPeriod: typing.Union[MetaOapg.properties.MinTermPeriod, str, ],
        RepAPR: typing.Union[MetaOapg.properties.RepAPR, str, ],
        TierValueMinTerm: typing.Union[MetaOapg.properties.TierValueMinTerm, decimal.Decimal, int, ],
        Identification: typing.Union[MetaOapg.properties.Identification, str, schemas.Unset] = schemas.unset,
        LoanInterestFeesCharges: typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges', schemas.Unset] = schemas.unset,
        LoanProviderInterestRate: typing.Union[MetaOapg.properties.LoanProviderInterestRate, str, schemas.Unset] = schemas.unset,
        LoanProviderInterestRateType: typing.Union[MetaOapg.properties.LoanProviderInterestRateType, str, schemas.Unset] = schemas.unset,
        MaxTermPeriod: typing.Union[MetaOapg.properties.MaxTermPeriod, str, schemas.Unset] = schemas.unset,
        Notes: typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes', schemas.Unset] = schemas.unset,
        OtherLoanProviderInterestRateType: typing.Union['OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType', schemas.Unset] = schemas.unset,
        TierValueMaxTerm: typing.Union[MetaOapg.properties.TierValueMaxTerm, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        TierValueMaximum: typing.Union[MetaOapg.properties.TierValueMaximum, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItem':
        return super().__new__(
            cls,
            *args,
            FixedVariableInterestRateType=FixedVariableInterestRateType,
            TierValueMinimum=TierValueMinimum,
            MinTermPeriod=MinTermPeriod,
            RepAPR=RepAPR,
            TierValueMinTerm=TierValueMinTerm,
            Identification=Identification,
            LoanInterestFeesCharges=LoanInterestFeesCharges,
            LoanProviderInterestRate=LoanProviderInterestRate,
            LoanProviderInterestRateType=LoanProviderInterestRateType,
            MaxTermPeriod=MaxTermPeriod,
            Notes=Notes,
            OtherLoanProviderInterestRateType=OtherLoanProviderInterestRateType,
            TierValueMaxTerm=TierValueMaxTerm,
            TierValueMaximum=TierValueMaximum,
            _configuration=_configuration,
            **kwargs,
        )

from open_banking_account_and_transaction_python_sdk.model.ob_interest_fixed_variable_type1_code import OBInterestFixedVariableType1Code
from open_banking_account_and_transaction_python_sdk.model.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_loan_interest_fees_charges import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemLoanInterestFeesCharges
from open_banking_account_and_transaction_python_sdk.model.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_notes import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemNotes
from open_banking_account_and_transaction_python_sdk.model.ob_read_product2_data_product_item_other_product_type_loan_interest_loan_interest_tier_band_set_item_loan_interest_tier_band_item_other_loan_provider_interest_rate_type import OBReadProduct2DataProductItemOtherProductTypeLoanInterestLoanInterestTierBandSetItemLoanInterestTierBandItemOtherLoanProviderInterestRateType

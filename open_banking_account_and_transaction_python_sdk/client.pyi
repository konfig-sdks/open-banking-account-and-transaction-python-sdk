# coding: utf-8
"""
    Account and Transaction API Specification

    Swagger for Account and Transaction API Specification

    The version of the OpenAPI document: 3.1.7
    Contact: ServiceDesk@openbanking.org.uk
    Generated by: https://konfigthis.com
"""

import typing
import inspect
from datetime import date, datetime
from open_banking_account_and_transaction_python_sdk.client_custom import ClientCustom
from open_banking_account_and_transaction_python_sdk.configuration import Configuration
from open_banking_account_and_transaction_python_sdk.api_client import ApiClient
from open_banking_account_and_transaction_python_sdk.type_util import copy_signature
from open_banking_account_and_transaction_python_sdk.apis.tags.account_access_api import AccountAccessApi
from open_banking_account_and_transaction_python_sdk.apis.tags.accounts_api import AccountsApi
from open_banking_account_and_transaction_python_sdk.apis.tags.balances_api import BalancesApi
from open_banking_account_and_transaction_python_sdk.apis.tags.beneficiaries_api import BeneficiariesApi
from open_banking_account_and_transaction_python_sdk.apis.tags.direct_debits_api import DirectDebitsApi
from open_banking_account_and_transaction_python_sdk.apis.tags.offers_api import OffersApi
from open_banking_account_and_transaction_python_sdk.apis.tags.parties_api import PartiesApi
from open_banking_account_and_transaction_python_sdk.apis.tags.products_api import ProductsApi
from open_banking_account_and_transaction_python_sdk.apis.tags.scheduled_payments_api import ScheduledPaymentsApi
from open_banking_account_and_transaction_python_sdk.apis.tags.standing_orders_api import StandingOrdersApi
from open_banking_account_and_transaction_python_sdk.apis.tags.statements_api import StatementsApi
from open_banking_account_and_transaction_python_sdk.apis.tags.transactions_api import TransactionsApi



class OpenBanking(ClientCustom):

    def __init__(self, configuration: typing.Union[Configuration, None] = None, **kwargs):
        super().__init__(configuration, **kwargs)
        if (len(kwargs) > 0):
            configuration = Configuration(**kwargs)
        if (configuration is None):
            raise Exception("configuration is required")
        api_client = ApiClient(configuration)
        self.account_access: AccountAccessApi = AccountAccessApi(api_client)
        self.accounts: AccountsApi = AccountsApi(api_client)
        self.balances: BalancesApi = BalancesApi(api_client)
        self.beneficiaries: BeneficiariesApi = BeneficiariesApi(api_client)
        self.direct_debits: DirectDebitsApi = DirectDebitsApi(api_client)
        self.offers: OffersApi = OffersApi(api_client)
        self.parties: PartiesApi = PartiesApi(api_client)
        self.products: ProductsApi = ProductsApi(api_client)
        self.scheduled_payments: ScheduledPaymentsApi = ScheduledPaymentsApi(api_client)
        self.standing_orders: StandingOrdersApi = StandingOrdersApi(api_client)
        self.statements: StatementsApi = StatementsApi(api_client)
        self.transactions: TransactionsApi = TransactionsApi(api_client)
